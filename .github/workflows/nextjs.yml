# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Resto de tus pasos aqu√≠...

      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} cd frontend && ${{ steps.detect-package-manager.outputs.runner }} next build

      - name: Static HTML export with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} cd frontend && ${{ steps.detect-package-manager.outputs.runner }} next export
        # Modifica la ruta del comando para apuntar a la carpeta 'frontend'

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: frontend-out # Cambia el nombre del artefacto si es necesario
          path: ./frontend/out # Modifica la ruta del artefacto para que coincida con la carpeta 'frontend'
      
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
        with:
          # Modifica la ruta del directorio para apuntar a la carpeta 'frontend'
          directory: ./frontend/out
